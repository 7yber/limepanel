#! /bin/bash
#panel script for bspwm using i3 style workspace indicator

#set height and font if unset 
 
PANEL_FIFO="$HOME/.config/bspwm/panfifo"
[[  $PANEL_HEIGHT && ${PANEL_HEIGHT-x} ]] && panel_height=$PANEL_HEIGHT || panel_height='25'
[[  $PANEL_FONT_FAMILY && ${PANEL_FONT_FAMILY-x} ]] && mainfont=$PANEL_FONT_FAMILY || mainfont='-zevv-*-*-*-*-*-20-*-*-*-*-*-*-*'
[[  $FONT_FAMILY3 && ${FONT_FAMILY3-x} ]] && iconfont=$FONT_FAMILY3 || iconfont="-*-ionicons-medium-r-normal-*-25-*-*-*-p-*-*-1"
#Set height if unset
[[  $PANEL_HEIGHT && ${PANEL_HEIGHT-x} ]] && panel_height=$PANEL_HEIGHT || panel_height=25
 
# From panel_colors file 
COLOR_FOCUSED_DESKTOP_FG="#FF99CC99"
COLOR_FOCUSED_DESKTOP_BG="#FF000000"
COLOR_DESKTOP_FG='#FFF6F9FF'
COLOR_DESKTOP_BG="#FF000000"

function conkywrap {
	bat=$(ls /sys/class/power_supply | grep --color=never 'BAT*')
	interface=$(awk 'NR>1{print $6}' < /proc/net/arp)
	sed -i 's/BAT1/'$bat'/g' $HOME/.config/bspwm/panel/conkyrc &
	sed -i 's/wlp1s0/'$interface'/g' $HOME/.config/bspwm/panel/conkyrc &
}

panel_volicon()
{
        volStatus=$(pulseaudio-ctl full-status | awk '{print $2}')
        volLevel=$(pulseaudio-ctl C)

        if [ "$volStatus" == "yes" ]
                then echo $GREEN " ${volLevel}"
        elif [ "$volStatus" == "no" ]
                then echo $RED " ${volLevel}"
	else echo " ?"
        fi
}

function volume_status {
	echo "V"%{A:dvol:}%{A2:pulseaudio-ctl mute &&volume_status:}%{A5:pulseaudio-ctl down &&volume_status:}%{A4:pulseaudio-ctl up &&volume_status:}$(panel_volicon)%{A}%{A}%{A}%{A}> "$PANEL_FIFO"
}

logo="%{A:dmainmenu.sh &disown:}  %{A}"
# Kill any panel processes older than us, instead of bailing like the example
# does. That caused one too many panel-less boots for me.
 
while [ $(pgrep -cx limepanel) -gt 1 ] ; do
	pkill -ox -9 limepanel
	pkill -ox -9 lemonbar
	killall -9 stalonetray
	killall -9 xtitle
	killall -9 conky
done
if [ $(pgrep -cx lemonbar) -gt 1 ] ; then
	printf "%s\n" "The panel is already running."
    while [[ $(pgrep -c "lemonbar") != 0 ]]
    do
        pkill -n -9 "lemonbar"
    done
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

#Collect info to PANEL_FIFO  
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $(($PANEL_HEIGHT-$gap))
bspc control --subscribe > "$PANEL_FIFO" &
# Title
xtitle -sf 'T%s' > "$PANEL_FIFO" &
conkywrap && conky -c ~/.config/bspwm/panel/conkyrc > "$PANEL_FIFO" &
volume_status &
 

function lime {
 while read -r line ; do
    case $line in
        T*)
            title="${line#?}"
            ;;
	C*)
            conky_infos="%{F#FF99CC99}${line#?}"
            ;;
	V*)
            volume_infos="${RA}%{F#FF99CC99} ${line#?} "
            ;;    	    
        W*)
            # bspwm internal state
            desktops=""
            IFS=':'
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                name=${item#?}
                case $item in
                    # always show focused desktops
                    O*|F*|U*)
                        desktops="${desktops}%{F$COLOR_FOCUSED_DESKTOP_FG}%{B$COLOR_FOCUSED_DESKTOP_BG}%{U"#FF99CC99"}%{+u}${name}%{-u} %{B-}%{F-}"
                        ;;
                    # show used unfocused (hide free unused)
                    o*|u*)#f*
                        desktops="${desktops}%{F$COLOR_DESKTOP_FG}%{B$COLOR_DESKTOP_BG}%{A:bspc desktop -f ${name}:}${name}%{A}%{B-} %{F-}"
                        ;;
                    L*)
                    # layout
                        layout="%{A:bspc desktop -l next:}$wm_infos${name}%{B-}%{F-}%{A}"
                        ;;
                esac
                shift
            done
            ;;
    esac
    printf "%s\n" "%{l}${logo}${desktops}${layout}%{F#FFF6F9FF}%{c}${title}%{r}$volume_infos${conky_infos}"
 done
}

# Actually invoking the panel and piping to bar
 
cat $PANEL_FIFO \
	| lime \
	| lemonbar \
	-g x$panel_height \
	-f "$mainfont" -o -1 \
	-f "$iconfont" -o 0 \
	-F '#FF99CC99' \
	-B '#FF000000' \
	| sh &
wait
