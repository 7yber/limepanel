#! /bin/sh
#panel script for bspwm using i3 style workspace indicator

#set height and font if unset 
[[  $PANEL_HEIGHT && ${PANEL_HEIGHT-x} ]] && panel_height=$PANEL_HEIGHT || panel_height='25'
[[  $PANEL_FONT_FAMILY && ${PANEL_FONT_FAMILY-x} ]] && mainfont=$PANEL_FONT_FAMILY || mainfont='-zevv-*-*-*-*-*-20-*-*-*-*-*-*-*'
 
# From panel_colors file
 
COLOR_FOCUSED_DESKTOP_FG="F#FF99CC99"
COLOR_FOCUSED_DESKTOP_BG="F#FF000000"
COLOR_DESKTOP_FG='#FFF6F9FF'
COLOR_DESKTOP_BG="F#FF000000"
 
# Kill any panel processes older than us, instead of bailing like the example
# does.
 
while [ $(pgrep -cx panel) -gt 1 ] ; do
	pkill -ox -9 panel
        killall -9 stalonetray
        killall -9 xtitle
        killall -9 conky
done
 
# sending status updates to a FIFO
 
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# - functionified, from panel_bar file of example
# - the output changes based on the number of monitors, to place a single
# monitors's information on that same monitor, instead of all in one corner.
# - added B header for battery
# - all the desktop indicators are enumerated
 
logo="%{A:limemenu &disown:}  %{A}"

num_mon=$(bspc query -M | wc -l)

# rootcomas panel_bar

function lime {
 while read -r line ; do
    case $line in
        S*)
            time="${line#?}" #http://wiki.bash-hackers.org/syntax/pe#substring_removal
            ;;
        T*)
            title="${line#?}"
            ;;
	L*)
	    layout="${name}"
	    ;;
	C*)
            conky_infos="%{F#FF99CC99}${line#?}"
            ;;
	V*)
            volume_infos="${RA}%{F#FF99CC99} ${line#?} "
            ;;    	    
        W*)
            # bspwm internal state
            desktops=""
            IFS=':'
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                name=${item#?}
                case $item in
                    # always show focused desktops
                    O*|F*|U*)
                        desktops="${desktops}%{F$COLOR_FOCUSED_DESKTOP_FG}%{B$COLOR_FOCUSED_DESKTOP_BG} ${name} %{B-}%{F-}"
                        ;;
                    # show used unfocused (hide free unused)
                    o*|u*)#f*
                        desktops="${desktops}%{F$COLOR_DESKTOP_FG}%{B$COLOR_DESKTOP_BG}%{A:bspc desktop -f ${name}:} ${name} %{A}%{B-}%{F-}"
                        ;;
                esac
                shift
            done
            ;;
    esac
    printf "%s\n" "%{l}${logo}${desktops} ${layout}%{F#FFF6F9FF}%{c}${title}%{r}$volume_infos ${conky_infos} "
 done
}

# Actually invoking the panel and piping to bar
 
cat $PANEL_FIFO | lime | lemonbar -g x$panel_height -f $mainfont -o -3 -f "-*-ionicons-medium-r-normal-*-25-*-*-*-p-*-*-1" -F '#FF99CC99' -B '#FF000000' | sh &
 

wait

##Neeasades panel per monitor stuff
# Get the number of monitors we will be making bars for
num_mon=$(bspc query -M)

for i in $num_mon; do
    # remove any open panel fifo, and then create one
    [ -e "$PANEL_FIFO$i" ] && rm "$PANEL_FIFO$i"
    mkfifo "$PANEL_FIFO$i"

    bspc control --subscribe |\
        grep -oE "[Mm]$i[^TM]*[TML]" --line-buffered |\
        while read line; do echo W$line; done \
            > "$PANEL_FIFO$i" &
    volume_status.sh &
    #print conkyinfos on first panel only to avoid processes
    conky -c ~/.config/bspwm/panel/conkyrc > "$PANEL_FIFO$(bspc query -M | awk NR==1)" &
    xtitle -t 80 -sf 'T\\X%s//' > "$PANEL_FIFO$i" &
    #title.sh $i > "$PANEL_FIFO$i" &

    # The nested expr statements account for gap settings and current offset.
    # PANEL_GAP value is set in profile.
    cat $PANEL_FIFO$1 | lime | lemonbar -g x$panel_height -f $mainfont -o -3 -f "-*-ionicons-medium-r-normal-*-25-*-*-*-p-*-*-1" -F '#FF99CC99' -B '#FF000000' | sh &
done

wait
